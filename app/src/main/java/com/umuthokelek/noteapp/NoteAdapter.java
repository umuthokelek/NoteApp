package com.umuthokelek.noteapp;import android.content.Context;import android.view.LayoutInflater;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.PopupMenu;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import java.util.List;public class NoteAdapter extends RecyclerView.Adapter<NoteAdapter.NoteViewHolder> {    private List<Note> notes;    private Context context;    private OnNoteActionListener listener;    public interface OnNoteActionListener {        void onNoteClick(Note note); // Kısa tıklama için        void onUpdate(Note note);        void onDelete(Note note);    }    public NoteAdapter(List<Note> notes, Context context, OnNoteActionListener listener) {        this.notes = notes;        this.context = context;        this.listener = listener;    }    @NonNull    @Override    public NoteViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_note, parent, false);        return new NoteViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull NoteViewHolder holder, int position) {        Note note = notes.get(position);        holder.titleTextView.setText(note.getTitle());        holder.contentTextView.setText(note.getContent());        // Kısa tıklama: NoteDetailActivity'yi açmak için        holder.itemView.setOnClickListener(v -> {            if (listener != null) {                listener.onNoteClick(note); // Kısa tıklamayı dinleyiciye bildir            }        });        // Uzun tıklama: PopupMenu açmak için        holder.itemView.setOnLongClickListener(v -> {            PopupMenu popupMenu = new PopupMenu(context, holder.itemView);            popupMenu.inflate(R.menu.note_menu);            popupMenu.setOnMenuItemClickListener(item -> {                if (item.getItemId() == R.id.menu_update) {                    listener.onUpdate(note); // Güncelleme işlemi                    return true;                } else if (item.getItemId() == R.id.menu_delete) {                    listener.onDelete(note); // Silme işlemi                    return true;                }                return false;            });            popupMenu.show();            return true;        });    }    @Override    public int getItemCount() {        return notes.size();    }    static class NoteViewHolder extends RecyclerView.ViewHolder {        TextView titleTextView;        TextView contentTextView;        public NoteViewHolder(@NonNull View itemView) {            super(itemView);            titleTextView = itemView.findViewById(R.id.note_title);            contentTextView = itemView.findViewById(R.id.note_content);        }    }}